apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: "kotlin-kapt"
apply plugin: 'de.mannodermaus.android-junit5'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.cn29.aac"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0-alpha1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation"  : "$projectDir/schemas".toString(),
                             "room.incremental"     : "true",
                             "room.expandProjection": "true"]
            }
        }
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        debug {
            minifyEnabled false
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions "default"
    productFlavors {
        // When building a variant that uses this flavor, the following configurations
        // override those in the defaultConfig block.
        dev {
            // To avoid using legacy multidex when building from the command line,
            // set minSdkVersion to 21 or higher. When using Android Studio 2.3 or higher,
            // the build automatically avoids legacy multidex when deploying to a device running
            // API level 21 or higherâ€”regardless of what you set as your minSdkVersion.
            minSdkVersion 21
            // The following configuration limits the "dev" flavor to using
            // English stringresources and xxhdpi screen-density resources.
            resConfigs "en", "xxhdpi"
        }

        prod {
            // If you've configured the defaultConfig block for the release version of
            // your app, you can leave this block empty and Gradle uses configurations in
            // the defaultConfig block instead. You still need to create this flavor.
            // Otherwise, all variants use the "dev" flavor configurations.
        }
    }
    dexOptions {
        preDexLibraries true
        maxProcessCount 8
        // Instead of setting the heap size for the DEX process, increase Gradle's
        // heap size to enable dex-in-process. To learm more, read the next section.
        // javaMaxHeapSize "2048m"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
        test.java.srcDirs += 'src/test/java'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //android support library
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    api 'androidx.cardview:cardview:1.0.0'
    //android app architecture components
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "com.squareup.picasso:picasso:$picasso_version"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    //junit
    testImplementation "junit:junit:$junit_version"
    //stetho library for debugging
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    //dagger 2
    api "com.google.dagger:dagger-android:$dagger2_version"
    api "com.google.dagger:dagger-android-support:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    //Android RxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    //Picasso library
    implementation "com.squareup.picasso:picasso:$picasso_version"
    // for Google Sign in dependency
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //junit 5

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5_version"

    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.2.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:3.1.0'
    testImplementation("com.squareup.okhttp3:mockwebserver:4.4.0")
}
repositories {
    mavenCentral()
}
